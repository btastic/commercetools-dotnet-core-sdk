<?xml version="1.0"?>
<doc>
    <assembly>
        <name>commercetools.Sdk.Registration</name>
    </assembly>
    <members>
        <member name="T:commercetools.Sdk.Registration.DependencyInjectionSetup">
            <summary>
            Contains extensions methods to use when injecting dependencies.
            </summary>
        </member>
        <member name="M:commercetools.Sdk.Registration.DependencyInjectionSetup.UseRegistration(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds concrete implementations necessary for running of the application to the service collection.
            </summary>
            <param name="services">The service collection.</param>
        </member>
        <member name="T:commercetools.Sdk.Registration.ITypeRetriever">
            <summary>
            Retrieves the types from an assembly.
            </summary>
        </member>
        <member name="M:commercetools.Sdk.Registration.ITypeRetriever.GetTypes``1">
            <summary>
            Gets the types from the same assembly as T that T is assignable from.
            </summary>
            <typeparam name="T">A type.</typeparam>
            <returns>The list of types.</returns>
        </member>
        <member name="T:commercetools.Sdk.Registration.TypeRetriever">
            <summary>
            Retrieves the types from an assembly.
            </summary>
        </member>
        <member name="M:commercetools.Sdk.Registration.TypeRetriever.GetTypes``1">
            <summary>
            Gets the types from the same assembly as T that T is assignable from.
            </summary>
            <typeparam name="T">A type.</typeparam>
            <returns>The list of types.</returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            This class contains extensions methods for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.RegisterAllTypes``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Adds all concrete implementation types that are assignable from the specified service type to the service collection.
            </summary>
            <typeparam name="T">The service type.</typeparam>
            <param name="services">The services.</param>
            <param name="lifetime">The lifetime.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.RegisterAllTypes(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            Adds all concrete implementation types that are assignable from the specified service type to the service collection.
            </summary>
            <param name="services">The service collection.</param>
            <param name="type">The service type.</param>
            <param name="lifetime">The lifetime.</param>
            <remarks>In case the specified service type in an open generic type, first the concrete generic type is created based on the retrieved implementation type.</remarks>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.GetTypeForGenericTypeDefinition(System.Type,System.Type)">
            <summary>
            Gets the concrete generic type for the specified open generic type.
            </summary>
            <param name="openGenericType">The open generic type.</param>
            <param name="concreteType">The concrete type from which the generic parameter is retrieved.</param>
            <returns>The concrete generic type.</returns>
            <remarks>
            GenericType&lt;&gt;
            ConcreteType: GenericType&lt;T&gt;
            returns GenericType&lt;T&gt;
            </remarks>
        </member>
        <member name="T:System.TypeExtensions">
            <summary>
            This class contains extensions methods for <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:System.TypeExtensions.GetAllConcreteAssignableTypes(System.Type,System.Reflection.Assembly)">
            <summary>
            Gets all concrete types that the current type can be assigned from.
            </summary>
            <param name="currentType">The current type.</param>
            <param name="assembly">The assembly.</param>
            <returns>The list of all concrete types that the current type can be assigned from.</returns>
            <remarks>For open generic types, this method loops through all base types and all interfaces and checks if any of them match the open generic type.</remarks>
        </member>
        <member name="M:System.TypeExtensions.GetAllAssignableTypes(System.Type)">
            <summary>
            Gets all types the specified type can be assigned from, including the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns>The list of all types the passed type can be assigned from.</returns>
            <remarks>This method returns the specified type, all base types and all interfaces.</remarks>
        </member>
        <member name="M:System.TypeExtensions.GetMarkedTypes(System.Type)">
            <summary>
            Get Types that marked with the passed custom attribute
            </summary>
            <param name="currentType">the type of the custom attribute</param>
            <returns>All types that have this custom attribute</returns>
        </member>
    </members>
</doc>
